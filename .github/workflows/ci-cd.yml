name: CI/CD

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - uses: actions/checkout@v4

      - name: Set Up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/gobank-ecr:$TAG .
          docker tag $REGISTRY/gobank-ecr:$TAG $REGISTRY/gobank-ecr:latest
          docker push --all-tags $REGISTRY/gobank-ecr
          echo "image=$REGISTRY/gobank-ecr:$TAG" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: Run Terraform init
        working-directory: infrastructure
        run: |
          terraform init
          terraform fmt -check

      - name: Run Terraform plan
        working-directory: infrastructure
        run: terraform plan
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
          TF_VAR_ecr_image: ${{ needs.build.outputs.image }}

      - name: Run Terraform apply
        working-directory: infrastructure
        run: terraform apply -auto-approve
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
          TF_VAR_ecr_image: ${{ needs.build.outputs.image }}

  release:
    name: Generate Release
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
